tipos Primitivos
    int => inteiro
    float => tipo real
    bool => boleano True / False
        se a variavel for vazia=> false ,se tiver algum valor => true
    str => string

# pontos importantes
1° forma de concatenar uma variavem em um print
print('O numero digitado foi ', n1 ,'ok')

2° forma de concatenar uma variavem em um print
prinf ('O numero digitado foi {} ok'.format(n1)


# retorna o tipo da variavel
print(type(var))

# ferifica o typo da variavel true ou false
    n1.isnumeric => true se for um numero false se nao for numero
    is.alphanun => retortna true se conter numero e letras
    isalpha => retorna true se conter apenas letras
    islower => retorna true se tiver tudo em minusculo

__________________________________________________________________________________________________________________________________
                                                Operaçoes artimeticas

+ => soma
- => subtrae
* => multiplica
/ => divisão
** => potencia elevado a 2
// => divisao inteira , pega o resultado da divisao mas so a parte inteira
% => o resto da divisao

# ordem de precedencia das operaçoes
1° ()
2° ** potencia
3° * ,/ , % , // (multiplicação, divisão, resto da divisao, divisão inteira)  na ordem que aparecer primeiro
4° +,- ( soma , divisão)

# potencia
4**3 => 4 elevado a 3° potencia
#função interna de potencia
pow(4,3) => 4 elevado a 3° potencia

# Raiz quadrada
25**(1/2) => retorna a raiz quadrada de 25

# Raiz cubica
125**(1/3) => retorna a raiz cubica de 125

# somando um string
print('=' * 5 ) => imprime = 5 vezes na tela

------------------------------------------------------------------------------------------------------------------
                                                    format
{:20} => imprime o resultado em 20 posição
{:>20} => imprime o resultado em 20 posição alinhado a direita
{:<20} => imprime o resultado em 20 posição alinhado a esquerda
{:^20} => imprime o resultado em 20 posição alinhado ao centro
{:=^20} => imprime a variavel no centro e completa todos os espaços com =
{:.2f} => formata o numero em 2 casa decimais

# as operaçõe aritimeticas pode ser colocadas diretamente no format
print(f'O resultado da soma entre os numero foi {n1+n2}')


-------------------------------------------------------------------------------------------------------------
                            Print
#coloca os prints na mesma linha
end='' => coloca os prints na mesma linha
\n => quebra a linha de um print
print('Esta é a pirmeira linha ', end='')
print('Esta é a segunda linha')


__________________________________________________________________________________________________________
                                Porcetagem
valor * porcetagem / 100
100 * 10 / 100 (10 por cento de 100)

# aumento em porcetagem
valor + (valor  * percento / 100)

# desconto em percento
valor - ( valor * percento / 100)

---------------------------------------------------------------------------------------------------------
alula teorica 08 - Ultilizando modulos

# importação de moulos
import nome_modulo => importa tudo
from nome_modulo import nome_metodo => importa somente o metudo

math => biblioteca python para calculos matematicos
# importando toda biblioteca math
import math
num = int(input('Digite um numero'))
raiz = math.sqrt(num)
print(raiz)

# importando somente o metodo raiz quadrada
from math import sqrt
num = int(input('Digite um numero'))
raiz = sqrt(num)


----------------------------------------------------------------------------------------------------------------------
aulateorica 09 -                        Manipulando texto

# Fatiamento de string

frase[9] => pega o cractere na posição 9
frase[9:13] => pega um conjunto de caractere começãndo da posiçõa 9 ate a posiçõa 12(obs: a posição 13 ele nao pega)
frase[9:] => pega da posição 9 ate o final da string
frase[:9] => pega desdo o inicio da string ate a posição 8
frase[9:8:2] => pega da posição 9 ate a posição 7 pulando de 2 em 2
frase[9::3] => pega desde a posião 9 ate o final pulando de 3 em 3

# Analise de string

len(frase) => retorna o tamanho/comprimento da string
frase.count('o') => conta quantos vezes aparece o caractere "o" na string
fase.count('o',0,13) => conta ja fazendo um fatiamento, da posiçõa 0 ate a posição 13
frase.find('deo') => retorna em qual posição foi encontrado o conjunto de caractere,se nao encontrar retorna -1
'curso' in frase => verifica se existe a palavra curso na variavel frase ,retorna true/false

# Transformação de string

frase.replace('python','android') => verifica se existe a palavra python e troca pela palavra android
frase.upper() => coloca toda string em maiuculo
frase.lower() => coloca toda string em minuscula
frase.capitalize() => coloca somente o primeiro caractere da string para maiusculo
frase.title() => pega todas as palavras da strings e colocar a primeira letra em maiuscula
frase.strip() => remove os espaços no começo e no final da string
frase.rstrip() => remove os espaços a direita
frase.lstrip() => remove os espaços vazios a esquerda

#divisão de string

frase.split() => divide a string em partes gerando uma lista


# junção de strings
'-'.join(frase) => pega uma lista e cria uma string separando por '-'
' '.join(frase) => pega uma lista e cria uma string separado por ' ' espaço
'/'.join(frase) => pega uma lista e cria uma string separando por /

# aninhando comandos

print(frase.upper().strip())

---------------------------------------------------------------------------------------------------------------
aula 10                             estrutura de condição

#condição simplificada
print('Carro novo' if tempo <= 3 else 'Carro velho') => parecido com operador ternario
